/*
Copyright 2020 The Krole Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "ton/pkg/apis/ton/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LineLister helps list Lines.
type LineLister interface {
	// List lists all Lines in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Line, err error)
	// Lines returns an object that can list and get Lines.
	Lines(namespace string) LineNamespaceLister
	LineListerExpansion
}

// lineLister implements the LineLister interface.
type lineLister struct {
	indexer cache.Indexer
}

// NewLineLister returns a new LineLister.
func NewLineLister(indexer cache.Indexer) LineLister {
	return &lineLister{indexer: indexer}
}

// List lists all Lines in the indexer.
func (s *lineLister) List(selector labels.Selector) (ret []*v1alpha1.Line, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Line))
	})
	return ret, err
}

// Lines returns an object that can list and get Lines.
func (s *lineLister) Lines(namespace string) LineNamespaceLister {
	return lineNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LineNamespaceLister helps list and get Lines.
type LineNamespaceLister interface {
	// List lists all Lines in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Line, err error)
	// Get retrieves the Line from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Line, error)
	LineNamespaceListerExpansion
}

// lineNamespaceLister implements the LineNamespaceLister
// interface.
type lineNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Lines in the indexer for a given namespace.
func (s lineNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Line, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Line))
	})
	return ret, err
}

// Get retrieves the Line from the indexer for a given namespace and name.
func (s lineNamespaceLister) Get(name string) (*v1alpha1.Line, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("line"), name)
	}
	return obj.(*v1alpha1.Line), nil
}
